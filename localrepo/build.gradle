apply plugin: 'com.android.library'
apply plugin: 'maven'

Properties localProperties = new Properties()
def localFile = new File("${rootDir}/local.properties")
if (localFile.canRead()) {
    localProperties.load(localFile.newDataInputStream())
    println "localProperties: " + localProperties
} else {
    println("not find params.properties")
}
def localRepoUrl = localProperties.getProperty('LOCAL_REPO_URL')
def develop = Boolean.parseBoolean(localProperties.getProperty('develop'))
develop = (develop == null ? false : develop);

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'
}

uploadArchives {
    repositories.mavenDeployer {
        if(develop) {
            repository(url: localRepoUrl)
        } else {
            repository(url: REMOTE_URL)
            //替换成自己的用户名和密码
            authentication(userName: "developer_test", password: "developer123")
        }

        pom.groupId = PROJ_GROUP
        pom.artifactId = PROJ_ARTIFACTID
        pom.version = PROJ_VERSION
    }
}
